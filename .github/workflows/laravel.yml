# GitHub Action for Laravel with MySQL
name: Testing Laravel with MySQL
on: [ push, pull_request ]
jobs:
  laravel:
    name: Laravel
    runs-on: ubuntu-latest
    env:
      DB_DATABASE: laravel
      DB_USERNAME: root
      DB_PASSWORD: password

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel
        ports:
          - 3306/tcp

    steps:
      - name: Checkout
        uses: actions/checkout@v3

        # Docs: https://github.com/shivammathur/setup-php
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1.6'
          extensions: mbstring, dom, fileinfo, mysql
          coverage: xdebug

      # Local MySQL service in GitHub hosted environments is disabled by default.
      # If you are using it instead of service containers, make sure you start it.
      # - name: Start mysql service
      #   run: sudo systemctl start mysql.service

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Prepare the application
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php artisan key:generate

      - name: Clear Config
        run: php artisan config:clear

      - name: Run Migration
        run: php artisan migrate -v --seed
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}

      - name: Run test
        run: |
          php artisan config:cache
          php artisan cache:clear
          php artisan view:clear
          php artisan route:cache
          php artisan test
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
